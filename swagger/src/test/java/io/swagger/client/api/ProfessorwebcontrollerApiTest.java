/**
 * Spring Boot REST API
 * \"Spring Boot REST API for the College Schedule Web App\"
 *
 * OpenAPI spec version: 0.1
 * Contact: sedoff@zohomail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import org.junit.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ProfessorwebcontrollerApi
 */
public class ProfessorwebcontrollerApiTest {

    private final ProfessorwebcontrollerApi api = new ProfessorwebcontrollerApi();

    
    /**
     * createProfessor
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createProfessorUsingPOSTTest() throws ApiException {
        Integer id = null;
        String mode = null;
        String name = null;
        String notes = null;
        String ranks = null;
        // String response = api.createProfessorUsingPOST(id, mode, name, notes, ranks);

        // TODO: test validations
    }
    
    /**
     * deleteProfessor
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteProfessorUsingPOSTTest() throws ApiException {
        Integer id = null;
        String mode = null;
        String name = null;
        String notes = null;
        String ranks = null;
        // String response = api.deleteProfessorUsingPOST(id, mode, name, notes, ranks);

        // TODO: test validations
    }
    
    /**
     * getIdParam
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getIdParamUsingGET1Test() throws ApiException {
        String id = null;
        String mode = null;
        String name = null;
        String notes = null;
        String ranks = null;
        // String response = api.getIdParamUsingGET1(id, mode, name, notes, ranks);

        // TODO: test validations
    }
    
    /**
     * getProfessors
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getProfessorsUsingGETTest() throws ApiException {
        // String response = api.getProfessorsUsingGET();

        // TODO: test validations
    }
    
    /**
     * updateProfessor
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateProfessorUsingPOSTTest() throws ApiException {
        Integer id = null;
        String mode = null;
        String name = null;
        String notes = null;
        String ranks = null;
        // String response = api.updateProfessorUsingPOST(id, mode, name, notes, ranks);

        // TODO: test validations
    }
    
}
